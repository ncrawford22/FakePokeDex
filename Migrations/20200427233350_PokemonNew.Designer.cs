// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pokemon.Data;

namespace Pokedex.Migrations
{
    [DbContext(typeof(PokeWorldContext))]
    [Migration("20200427233350_PokemonNew")]
    partial class PokemonNew
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("Pokedex.Models.Element", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Element");
                });

            modelBuilder.Entity("Pokedex.Models.Pokemons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ElementTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Total")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ElementTypeId");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Pokedex.Models.Pokemons", b =>
                {
                    b.HasOne("Pokedex.Models.Element", "ElementType")
                        .WithMany()
                        .HasForeignKey("ElementTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
